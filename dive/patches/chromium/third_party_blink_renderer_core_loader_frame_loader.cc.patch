diff --git a/third_party/blink/renderer/core/loader/frame_loader.cc b/third_party/blink/renderer/core/loader/frame_loader.cc
index 4786257911..87af5a1031 100644
--- a/third_party/blink/renderer/core/loader/frame_loader.cc
+++ b/third_party/blink/renderer/core/loader/frame_loader.cc
@@ -268,11 +268,24 @@ void FrameLoader::Init(std::unique_ptr<PolicyContainer> policy_container,
   // Ensure that the frame sees the correct page lifecycle state.
   frame_->OnPageLifecycleStateUpdated();

+  if (HTMLFrameOwnerElement* ownerElement = frame_->DeprecatedLocalOwner()) {
+    setUserAgentOverride(ownerElement->FastGetAttribute(html_names::kNwuseragentAttr));
+  }
   TakeObjectSnapshot();

   state_ = State::kInitialized;
 }

+void FrameLoader::setUserAgentOverride(const String& agent)
+{
+  user_agent_override_ = agent;
+}
+
+String FrameLoader::userAgentOverride() const
+{
+  return user_agent_override_;
+}
+
 LocalFrameClient* FrameLoader::Client() const {
   return frame_->Client();
 }
@@ -639,6 +652,7 @@ void FrameLoader::StartNavigation(FrameLoadRequest& request,
   ResourceRequest& resource_request = request.GetResourceRequest();
   const KURL& url = resource_request.Url();
   LocalDOMWindow* origin_window = request.GetOriginWindow();
+  NavigationPolicy policy = request.GetNavigationPolicy();

   TRACE_EVENT2("navigation", "FrameLoader::StartNavigation", "url",
                url.GetString().Utf8(), "load_type",
@@ -702,7 +716,7 @@ void FrameLoader::StartNavigation(FrameLoadRequest& request,
       resource_request.Url(), frame_load_type);

   bool same_document_navigation =
-      request.GetNavigationPolicy() == kNavigationPolicyCurrentTab &&
+      policy == kNavigationPolicyCurrentTab &&
       ShouldPerformFragmentNavigation(
           request.Form(), resource_request.HttpMethod(), frame_load_type, url);

@@ -747,6 +761,18 @@ void FrameLoader::StartNavigation(FrameLoadRequest& request,
                            ? mojom::RequestContextFrameType::kTopLevel
                            : mojom::RequestContextFrameType::kNested);

+  bool policy_override = false;
+  NavigationPolicy policy0 = policy;
+  mojom::RequestContextType context = resource_request.GetRequestContext();
+  if (context ==  blink::mojom::RequestContextType::HYPERLINK ||
+      context ==  blink::mojom::RequestContextType::FORM) {
+    Client()->willHandleNavigationPolicy(resource_request, &policy0, NULL, false);
+    if (policy0 == kNavigationPolicyIgnore) {
+      policy = policy0;
+      policy_override = true;
+    }
+  }
+
   // TODO(arthursonzogni): 'frame-src' check is disabled on the
   // renderer side, but is enforced on the browser side.
   // See http://crbug.com/692595 for understanding why it
@@ -849,6 +875,7 @@ void FrameLoader::StartNavigation(FrameLoadRequest& request,
     }
   }

+  if (!policy_override)
   Client()->BeginNavigation(
       resource_request, request.GetFrameType(), origin_window,
       nullptr /* document_loader */, navigation_type,
@@ -1400,7 +1427,16 @@ void FrameLoader::RestoreScrollPositionAndViewState(
 String FrameLoader::ApplyUserAgentOverrideAndLog(
     const String& user_agent) const {
   String user_agent_override;
-  probe::ApplyUserAgentOverride(probe::ToCoreProbeSink(frame_->GetDocument()),
+  LocalFrame* frame = frame_;
+  while (frame) {
+    if (!frame->Loader().user_agent_override_.IsEmpty())
+      return frame->Loader().user_agent_override_;
+    Frame* f = frame->Tree().Parent();
+    if (!f || !f->IsLocalFrame())
+      break;
+    frame = DynamicTo<LocalFrame>(f);
+  }
+  probe::ApplyUserAgentOverride(probe::ToCoreProbeSink(frame->GetDocument()),
                                 &user_agent_override);

   if (Client()->UserAgentOverride().IsEmpty() &&
@@ -1429,7 +1465,7 @@ String FrameLoader::ApplyUserAgentOverrideAndLog(

     if (document_loader_) {
       document_loader_->GetUseCounter().CountUserAgentOverride(histogram,
-                                                               frame_.Get());
+                                                               frame);
     }
   }

