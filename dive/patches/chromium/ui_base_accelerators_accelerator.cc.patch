diff --git a/ui/base/accelerators/accelerator.cc b/ui/base/accelerators/accelerator.cc
index e032433d70..ace1d204c5 100644
--- a/ui/base/accelerators/accelerator.cc
+++ b/ui/base/accelerators/accelerator.cc
@@ -6,6 +6,7 @@

 #include <stdint.h>
 #include <tuple>
+#include "base/strings/stringprintf.h"

 #include "base/check_op.h"
 #include "base/i18n/rtl.h"
@@ -237,7 +238,9 @@ std::u16string Accelerator::GetShortcutText() const {
   shortcut = KeyCodeToName();
 #endif

-  if (shortcut.empty()) {
+  if (shortcut.empty() && key_code_ >= VKEY_F1 && key_code_ <= VKEY_F12)
+    shortcut = base::UTF8ToUTF16(base::StringPrintf("F%d", key_code_ - VKEY_F1 + 1));
+  else if (shortcut.empty()) {
 #if BUILDFLAG(IS_WIN)
     // Our fallback is to try translate the key code to a regular character
     // unless it is one of digits (VK_0 to VK_9). Some keyboard
@@ -453,7 +456,7 @@ std::u16string Accelerator::ApplyLongFormModifiers(
   // more information.
   if (IsCtrlDown())
     result = ApplyModifierToAcceleratorString(result, IDS_APP_CTRL_KEY);
-  else if (IsAltDown())
+  if (IsAltDown())
     result = ApplyModifierToAcceleratorString(result, IDS_APP_ALT_KEY);

   if (IsCmdDown()) {
@@ -463,6 +466,8 @@ std::u16string Accelerator::ApplyLongFormModifiers(
     result = ApplyModifierToAcceleratorString(result, IDS_APP_SEARCH_KEY);
 #elif BUILDFLAG(IS_WIN)
     result = ApplyModifierToAcceleratorString(result, IDS_APP_WINDOWS_KEY);
+#elif defined(OS_LINUX)
+    result = ApplyModifierToAcceleratorString(result, IDS_APP_SUPER_MODIFIER);
 #else
     NOTREACHED();
 #endif
