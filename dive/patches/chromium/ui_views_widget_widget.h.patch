diff --git a/ui/views/widget/widget.h b/ui/views/widget/widget.h
index 6e8a17f945..5b60fb00a7 100644
--- a/ui/views/widget/widget.h
+++ b/ui/views/widget/widget.h
@@ -616,6 +616,9 @@ class VIEWS_EXPORT Widget : public internal::NativeWidgetDelegate,

   // Sizes and/or places the widget to the specified bounds, size or position.
   void SetBounds(const gfx::Rect& bounds);
+#if defined(OS_WIN)
+  void SetPosition(const gfx::Point& position);
+#endif
   void SetSize(const gfx::Size& size);

   // Sizes the window to the specified size and centers it.
@@ -662,13 +665,13 @@ class VIEWS_EXPORT Widget : public internal::NativeWidgetDelegate,

   // Equivalent to CloseWithReason(ClosedReason::kUnspecified).
   // DEPRECATED: Please use CloseWithReason() instead.
-  void Close();
+  void Close(bool force = false);

   // Hides the widget, then closes it after a return to the message loop,
   // specifying the reason for it having been closed.
   // Note that while you can pass ClosedReason::kUnspecified, it is highly
   // discouraged and only supported for backwards-compatibility with Close().
-  void CloseWithReason(ClosedReason closed_reason);
+  void CloseWithReason(ClosedReason closed_reason, bool force = false);

   // A UI test which tries to asynchronously examine a widget (e.g. the pixel
   // tests) will fail if the widget is closed before that.  This can happen
@@ -1038,6 +1041,7 @@ class VIEWS_EXPORT Widget : public internal::NativeWidgetDelegate,

   base::WeakPtr<Widget> GetWeakPtr();

+  bool NWCanClose(bool user_force = false) const override;
   // Overridden from NativeWidgetDelegate:
   bool IsModal() const override;
   bool IsDialogBox() const override;
@@ -1275,6 +1279,7 @@ class VIEWS_EXPORT Widget : public internal::NativeWidgetDelegate,
   // Note that this may be ClosedReason::kUnspecified if the deprecated Close()
   // method was called rather than CloseWithReason().
   ClosedReason closed_reason_ = ClosedReason::kUnspecified;
+  bool force_closing_ = false;

   // The saved "show" state for this window. See note in SetInitialBounds
   // that explains why we save this.
