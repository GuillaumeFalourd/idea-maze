diff --git a/content/app/content_main.cc b/content/app/content_main.cc
index 34cbeddf6c..0867dd93cb 100644
--- a/content/app/content_main.cc
+++ b/content/app/content_main.cc
@@ -4,6 +4,8 @@

 #include "content/public/app/content_main.h"

+#include "content/nw/src/nw_base.h"
+
 #include "base/allocator/buildflags.h"
 #include "base/allocator/partition_alloc_support.h"
 #include "base/at_exit.h"
@@ -85,7 +87,7 @@ namespace {

 // Maximum message size allowed to be read from a Mojo message pipe in any
 // service manager embedder process.
-constexpr size_t kMaximumMojoMessageSize = 128 * 1024 * 1024;
+constexpr size_t kMaximumMojoMessageSize = 256 * 1024 * 1024;

 #if BUILDFLAG(IS_POSIX) && !BUILDFLAG(IS_ANDROID)

@@ -160,7 +162,7 @@ void CommonSubprocessInit() {
   }
 #endif

-#if !defined(OFFICIAL_BUILD) && BUILDFLAG(IS_WIN)
+#if 0
   base::RouteStdioToConsole(false);
   LoadLibraryA("dbghelp.dll");
 #endif
@@ -322,7 +324,7 @@ RunContentProcess(ContentMainParams params,

     base::EnableTerminationOnHeapCorruption();

-    SetProcessTitleFromCommandLine(argv);
+    //SetProcessTitleFromCommandLine(argv);
 #endif  // !BUILDFLAG(IS_ANDROID)

     InitTimeTicksAtUnixEpoch();
@@ -411,7 +413,7 @@ RunContentProcess(ContentMainParams params,
     }
 #endif  // !BUILDFLAG(IS_MAC) && !BUILDFLAG(IS_NACL) && !BUILDFLAG(IS_FUCHSIA)

-#if BUILDFLAG(IS_WIN)
+#if 0 //BUILDFLAG(IS_WIN)
     // Route stdio to parent console (if any) or create one.
     if (base::CommandLine::ForCurrentProcess()->HasSwitch(
             switches::kEnableLogging)) {
@@ -432,6 +434,11 @@ RunContentProcess(ContentMainParams params,
     CommonSubprocessInit();
   exit_code = content_main_runner->Run();

+  std::string type_switch =
+    base::CommandLine::ForCurrentProcess()->GetSwitchValueASCII(switches::kProcessType);
+  if (type_switch == "renderer")
+    exit_code = nw::ExitCodeHook();
+
   if (tracker) {
     if (exit_code == 0) {
       tracker->SetProcessPhaseIfEnabled(
