diff --git a/chrome/browser/ui/views/frame/browser_window_factory.cc b/chrome/browser/ui/views/frame/browser_window_factory.cc
index e997d0f23a..09ecb968a9 100644
--- a/chrome/browser/ui/views/frame/browser_window_factory.cc
+++ b/chrome/browser/ui/views/frame/browser_window_factory.cc
@@ -3,6 +3,7 @@
 // found in the LICENSE file.

 #include <memory>
+#include "ui/display/screen.h"

 #include "build/chromeos_buildflags.h"
 #include "chrome/browser/profiles/profiles_state.h"
@@ -46,6 +47,8 @@ BrowserWindow* BrowserWindow::CreateBrowserWindow(
 #endif
   // Create the view and the frame. The frame will attach itself via the view
   // so we don't need to do anything with the pointer.
+  bool frameless = browser->is_frameless();
+  std::string position = browser->initial_position();
   BrowserView* view = new BrowserView(std::move(browser));
   BrowserFrame* browser_frame = nullptr;
 #if BUILDFLAG(IS_CHROMEOS_ASH)
@@ -56,10 +59,21 @@ BrowserWindow* BrowserWindow::CreateBrowserWindow(
   browser_frame = new BrowserFrameLacros(view);
 #endif
   if (!browser_frame)
-    browser_frame = new BrowserFrame(view);
+    browser_frame = new BrowserFrame(view, frameless);
   if (in_tab_dragging)
     browser_frame->SetTabDragKind(TabDragKind::kAllTabs);
-  browser_frame->InitBrowserFrame();
+  bool got_saved_bounds = browser_frame->InitBrowserFrame();
+
+  if (position == "mouse" && !got_saved_bounds) {
+      gfx::Point cursor_pos(display::Screen::GetScreen()->GetCursorScreenPoint());
+      gfx::Rect bounds = browser_frame->GetWindowBoundsInScreen();
+      bounds.set_origin(cursor_pos);
+      browser_frame->SetBounds(bounds);
+  }
+  if (position == "center" && !got_saved_bounds) {
+    gfx::Rect bounds = browser_frame->GetWindowBoundsInScreen();
+    browser_frame->CenterWindow(bounds.size());
+  }

 #if BUILDFLAG(IS_MAC)
   if (base::FeatureList::IsEnabled(features::kImmersiveFullscreen)) {
