diff --git a/chrome/browser/ui/browser_window_state.cc b/chrome/browser/ui/browser_window_state.cc
index 4c80f3c3d3..1d9ba3691f 100644
--- a/chrome/browser/ui/browser_window_state.cc
+++ b/chrome/browser/ui/browser_window_state.cc
@@ -4,6 +4,8 @@

 #include "chrome/browser/ui/browser_window_state.h"

+#include "content/nw/src/nw_base.h"
+
 #include <stddef.h>

 #include <utility>
@@ -78,6 +80,8 @@ class WindowPlacementPrefUpdate : public DictionaryPrefUpdate {
 }  // namespace

 std::string GetWindowName(const Browser* browser) {
+  if (browser->is_type_popup() && !browser->windows_key().empty())
+    return browser->windows_key();
   switch (browser->type()) {
     case Browser::TYPE_NORMAL:
 #if BUILDFLAG(IS_CHROMEOS_ASH)
@@ -127,11 +131,16 @@ bool ShouldSaveWindowPlacement(const Browser* browser) {
 }

 bool SavedBoundsAreContentBounds(const Browser* browser) {
+  return !browser->is_type_devtools();
+#if 0
   // Applications other than web apps (such as devtools) save their window size.
   // Web apps, on the other hand, have the same behavior as popups, and save
   // their content bounds.
   return !browser->is_type_normal() && !browser->is_type_devtools() &&
          !browser->is_trusted_source();
+  // bounds should be content bounds for NW.js apps
+         //!browser->is_trusted_source();
+#endif
 }

 void SaveWindowPlacement(const Browser* browser,
@@ -161,14 +170,15 @@ void SaveWindowVisibleOnAllWorkspaces(const Browser* browser,
   }
 }

-void GetSavedWindowBoundsAndShowState(const Browser* browser,
+bool GetSavedWindowBoundsAndShowState(const Browser* browser,
                                       gfx::Rect* bounds,
                                       ui::WindowShowState* show_state) {
   DCHECK(browser);
   DCHECK(bounds);
   DCHECK(show_state);
+
   *bounds = browser->override_bounds();
-  WindowSizer::GetBrowserWindowBoundsAndShowState(*bounds, browser, bounds,
+  bool ret = WindowSizer::GetBrowserWindowBoundsAndShowState(*bounds, browser, bounds,
                                                   show_state);

   const base::CommandLine& parsed_command_line =
@@ -176,6 +186,7 @@ void GetSavedWindowBoundsAndShowState(const Browser* browser,

   internal::UpdateWindowBoundsAndShowStateFromCommandLine(parsed_command_line,
                                                           bounds, show_state);
+  return ret;
 }

 namespace internal {
