diff --git a/components/crash/core/app/crashpad_mac.mm b/components/crash/core/app/crashpad_mac.mm
index dc041c4337..9baba90839 100644
--- a/components/crash/core/app/crashpad_mac.mm
+++ b/components/crash/core/app/crashpad_mac.mm
@@ -148,11 +148,20 @@ bool PlatformCrashpadInitialization(

       // Is there a way to recover if this fails?
       CrashReporterClient* crash_reporter_client = GetCrashReporterClient();
+      const char* product_name = "";
+      const char* version = "";
+
+      crash_reporter_client->GetProductNameAndVersion(&product_name, &version);
       crash_reporter_client->GetCrashDumpLocation(database_path);
       crash_reporter_client->GetCrashMetricsLocation(&metrics_path);

       std::string url = crash_reporter_client->GetUploadUrl();

+      std::map<std::string, std::string> process_annotations;
+      process_annotations["prod"] = product_name;
+      process_annotations["ver"] = version;
+      process_annotations["plat"] = std::string("OS X");
+
       std::vector<std::string> arguments;

       if (crash_reporter_client->ShouldMonitorCrashHandlerExpensively()) {
@@ -173,9 +182,10 @@ bool PlatformCrashpadInitialization(
             "--reset-own-crash-exception-port-to-system-default");
       }

+
       bool result = GetCrashpadClient().StartHandler(
           handler_path, *database_path, metrics_path, url,
-          GetProcessSimpleAnnotations(), arguments, true, false);
+          process_annotations, arguments, true, false);

       // If this is an initial client that's not the browser process, it's
       // important to sever the connection to any existing handler. If
