diff --git a/extensions/common/permissions/permission_set.cc b/extensions/common/permissions/permission_set.cc
index eddc976b0b..417d215b4d 100644
--- a/extensions/common/permissions/permission_set.cc
+++ b/extensions/common/permissions/permission_set.cc
@@ -17,15 +17,15 @@ using extensions::mojom::APIPermissionID;

 namespace extensions {

-PermissionSet::PermissionSet() {}
+PermissionSet::PermissionSet(): allow_all_override_(false) {}
 PermissionSet::PermissionSet(APIPermissionSet apis,
                              ManifestPermissionSet manifest_permissions,
                              URLPatternSet explicit_hosts,
-                             URLPatternSet scriptable_hosts)
+                             URLPatternSet scriptable_hosts, bool allow_all)
     : apis_(std::move(apis)),
       manifest_permissions_(std::move(manifest_permissions)),
       explicit_hosts_(std::move(explicit_hosts)),
-      scriptable_hosts_(std::move(scriptable_hosts)) {
+      scriptable_hosts_(std::move(scriptable_hosts)), allow_all_override_(allow_all) {
   CleanExplicitHostPaths();
   InitImplicitPermissions();
   InitEffectiveHosts();
@@ -147,15 +147,21 @@ bool PermissionSet::IsEmpty() const {
   return apis().empty() && manifest_permissions().empty();
 }

-bool PermissionSet::HasAPIPermission(APIPermissionID id) const {
+bool PermissionSet::HasAPIPermission(APIPermissionID id,
+                                     bool ignore_override) const {
+  if (allow_all_override_ && !ignore_override)
+    return true;
   return apis().find(id) != apis().end();
 }

-bool PermissionSet::HasAPIPermission(const std::string& permission_name) const {
+bool PermissionSet::HasAPIPermission(const std::string& permission_name,
+                                     bool ignore_override) const {
   const APIPermissionInfo* permission =
       PermissionsInfo::GetInstance()->GetByName(permission_name);
   // Ensure our PermissionsProvider is aware of this permission.
   CHECK(permission) << permission_name;
+  if (allow_all_override_ && !ignore_override)
+    return true;
   return (permission && apis_.count(permission->id()));
 }

