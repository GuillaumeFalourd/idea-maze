diff --git a/extensions/common/manifest.h b/extensions/common/manifest.h
index 70f0c5fbf7..e88c96d8cf 100644
--- a/extensions/common/manifest.h
+++ b/extensions/common/manifest.h
@@ -43,6 +43,7 @@ class Manifest final {
     TYPE_LOGIN_SCREEN_EXTENSION = 8,
     TYPE_CHROMEOS_SYSTEM_EXTENSION = 9,

+    TYPE_NWJS_APP,
     // New enum values must go above here.
     NUM_LOAD_TYPES
   };
@@ -130,6 +131,10 @@ class Manifest final {

   ~Manifest();

+  void SetExtensionId(const ExtensionId& id) {
+    extension_id_ = id;
+    hashed_id_ = HashedExtensionId(id);
+  }
   const ExtensionId& extension_id() const { return extension_id_; }
   const HashedExtensionId& hashed_id() const { return hashed_id_; }

@@ -154,7 +159,8 @@ class Manifest final {
   bool is_app() const {
     return is_legacy_packaged_app() || is_hosted_app() || is_platform_app();
   }
-  bool is_platform_app() const { return type_ == TYPE_PLATFORM_APP; }
+  bool is_platform_app() const { return type_ == TYPE_PLATFORM_APP || type_ == TYPE_NWJS_APP; }
+  bool is_nwjs_app() const { return type_ == TYPE_NWJS_APP; }
   bool is_hosted_app() const { return type_ == TYPE_HOSTED_APP; }
   bool is_legacy_packaged_app() const {
     return type_ == TYPE_LEGACY_PACKAGED_APP;
@@ -206,11 +212,11 @@ class Manifest final {
   // like directory structures and URLs, and is expected to not change across
   // versions. It is generated as a SHA-256 hash of the extension's public
   // key, or as a hash of the path in the case of unpacked extensions.
-  const std::string extension_id_;
+  std::string extension_id_;

   // The hex-encoding of the SHA1 of the extension id; used to determine feature
   // availability.
-  const HashedExtensionId hashed_id_;
+  HashedExtensionId hashed_id_;

   // The location the extension was loaded from.
   const mojom::ManifestLocation location_;
