diff --git a/chrome/browser/resources/print_preview/data/destination_store.ts b/chrome/browser/resources/print_preview/data/destination_store.ts
index 6ba5dcc898..a238254d94 100644
--- a/chrome/browser/resources/print_preview/data/destination_store.ts
+++ b/chrome/browser/resources/print_preview/data/destination_store.ts
@@ -200,6 +200,7 @@ export class DestinationStore extends EventTarget {
    * Kiosk mode or when PDF printing is disallowed by policy.
    */
   private pdfPrinterEnabled_: boolean = false;
+  private isInNWPrintMode_: boolean = false;

   private recentDestinationKeys_: string[] = [];

@@ -325,7 +326,8 @@ export class DestinationStore extends EventTarget {
       // </if>
       systemDefaultDestinationId: string,
       serializedDefaultDestinationSelectionRulesStr: string|null,
-      recentDestinations: RecentDestination[]) {
+      recentDestinations: RecentDestination[],
+      isInNWPrintMode: boolean) {
     if (systemDefaultDestinationId) {
       const systemDefaultVirtual = isPdfPrinter(systemDefaultDestinationId);
       const systemDefaultType = systemDefaultVirtual ?
@@ -344,6 +346,7 @@ export class DestinationStore extends EventTarget {
       this.typesToSearch_.add(systemDefaultType);
     }

+    if (!isInNWPrintMode) {
     this.recentDestinationKeys_ = recentDestinations.map(
         destination => createRecentDestinationKey(destination));
     for (const recent of recentDestinations) {
@@ -356,8 +359,10 @@ export class DestinationStore extends EventTarget {
       this.typesToSearch_.add(PrinterType.EXTENSION_PRINTER);
       this.typesToSearch_.add(PrinterType.LOCAL_PRINTER);
     }
+    }

     this.pdfPrinterEnabled_ = !pdfPrinterDisabled;
+    this.isInNWPrintMode_ = isInNWPrintMode;
     this.createLocalPdfPrintDestination_();
     // <if expr="is_chromeos">
     if (isDriveMounted) {
