diff --git a/chrome/browser/apps/platform_apps/app_load_service.cc b/chrome/browser/apps/platform_apps/app_load_service.cc
index b07620b155..794dc35bee 100644
--- a/chrome/browser/apps/platform_apps/app_load_service.cc
+++ b/chrome/browser/apps/platform_apps/app_load_service.cc
@@ -4,6 +4,8 @@

 #include "chrome/browser/apps/platform_apps/app_load_service.h"

+#include "content/nw/src/nw_content.h"
+
 #include "apps/app_restore_service.h"
 #include "apps/launcher.h"
 #include "base/notreached.h"
@@ -69,6 +71,8 @@ bool AppLoadService::LoadAndLaunch(const base::FilePath& extension_path,
     return false;
   }

+  nw::SetMainExtensionId(extension_id);
+
   // Schedule the app to be launched once loaded.
   PostReloadAction& action = post_reload_actions_[extension_id];
   action.action_type = LAUNCH_FOR_LOAD_AND_LAUNCH;
@@ -132,7 +136,7 @@ void AppLoadService::OnExtensionUnloaded(
   extensions::ExtensionPrefs* extension_prefs =
       extensions::ExtensionPrefs::Get(browser_context);
   if (WasUnloadedForReload(extension->id(), reason) &&
-      extension_prefs->IsActive(extension->id()) &&
+      (extension->is_nwjs_app() || extension_prefs->IsActive(extension->id())) &&
       !HasPostReloadAction(extension->id())) {
     post_reload_actions_[extension->id()].action_type = LAUNCH_FOR_RELOAD;
   }
