diff --git a/chrome/browser/lifetime/application_lifetime.cc b/chrome/browser/lifetime/application_lifetime.cc
index dc5fe83022..5977772764 100644
--- a/chrome/browser/lifetime/application_lifetime.cc
+++ b/chrome/browser/lifetime/application_lifetime.cc
@@ -2,6 +2,9 @@
 // Use of this source code is governed by a BSD-style license that can be
 // found in the LICENSE file.

+#include "components/keep_alive_registry/keep_alive_registry.h"
+#include "components/keep_alive_registry/keep_alive_types.h"
+
 #include "chrome/browser/lifetime/application_lifetime.h"

 #include <memory>
@@ -273,12 +276,15 @@ void AttemptExitInternal(bool try_to_quit_application) {
 }  // namespace

 #if !BUILDFLAG(IS_ANDROID)
-void CloseAllBrowsersAndQuit() {
+void CloseAllBrowsersAndQuit(bool force, bool user_force) {
   browser_shutdown::SetTryingToQuit(true);
-  CloseAllBrowsers();
+  CloseAllBrowsers(force, user_force);
+  // trigger BrowserProcessImpl::Unpin()
+  KeepAliveRegistry::GetInstance()->Register(KeepAliveOrigin::APP_CONTROLLER, KeepAliveRestartOption::ENABLED);
+  KeepAliveRegistry::GetInstance()->Unregister(KeepAliveOrigin::APP_CONTROLLER, KeepAliveRestartOption::ENABLED);
 }

-void CloseAllBrowsers() {
+void CloseAllBrowsers(bool force, bool user_force) {
   // If there are no browsers and closing the last browser would quit the
   // application, send the APP_TERMINATING action here. Otherwise, it will be
   // sent by RemoveBrowser() when the last browser has closed.
@@ -294,7 +300,7 @@ void CloseAllBrowsers() {
                                                      false);
 #endif  // BUILDFLAG(IS_CHROMEOS_ASH)
   scoped_refptr<BrowserCloseManager> browser_close_manager =
-      new BrowserCloseManager;
+      new BrowserCloseManager(force, user_force);
   browser_close_manager->StartClosingBrowsers();
 }
 #endif  // !BUILDFLAG(IS_ANDROID)
