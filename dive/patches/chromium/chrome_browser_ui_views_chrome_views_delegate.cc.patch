diff --git a/chrome/browser/ui/views/chrome_views_delegate.cc b/chrome/browser/ui/views/chrome_views_delegate.cc
index 3eaa3eecaa..369567fa7b 100644
--- a/chrome/browser/ui/views/chrome_views_delegate.cc
+++ b/chrome/browser/ui/views/chrome_views_delegate.cc
@@ -7,6 +7,8 @@
 #include <memory>

 #include "base/check_op.h"
+#include "content/nw/src/nw_content.h"
+
 #include "build/build_config.h"
 #include "build/chromeos_buildflags.h"
 #include "chrome/browser/browser_process.h"
@@ -97,6 +99,8 @@ void ChromeViewsDelegate::SaveWindowPlacement(const views::Widget* window,
   window_preferences->SetIntKey("bottom", bounds.bottom());
   window_preferences->SetBoolKey("maximized",
                                  show_state == ui::SHOW_STATE_MAXIMIZED);
+  window_preferences->SetBoolKey("fullscreen",
+                                 show_state == ui::SHOW_STATE_FULLSCREEN);

   gfx::Rect work_area(display::Screen::GetScreen()
                           ->GetDisplayNearestView(window->GetNativeView())
@@ -127,8 +131,11 @@ bool ChromeViewsDelegate::GetSavedWindowPlacement(

   bounds->SetRect(*left, *top, *right - *left, *bottom - *top);

-  const bool maximized = dictionary.FindBool("maximized").value_or(false);
+  bool maximized = dictionary.FindBool("maximized").value_or(false);
+  bool fullscreen = dictionary.FindBool("fullscreen").value_or(false);
   *show_state = maximized ? ui::SHOW_STATE_MAXIMIZED : ui::SHOW_STATE_NORMAL;
+  if (fullscreen)
+    *show_state = ui::SHOW_STATE_FULLSCREEN;

 #if BUILDFLAG(IS_CHROMEOS_ASH)
   AdjustSavedWindowPlacementChromeOS(widget, bounds);
