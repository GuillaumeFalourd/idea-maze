diff --git a/chrome/browser/ui/tab_contents/chrome_web_contents_view_handle_drop.cc b/chrome/browser/ui/tab_contents/chrome_web_contents_view_handle_drop.cc
index c8a16e6bb6..6211172132 100644
--- a/chrome/browser/ui/tab_contents/chrome_web_contents_view_handle_drop.cc
+++ b/chrome/browser/ui/tab_contents/chrome_web_contents_view_handle_drop.cc
@@ -21,6 +21,7 @@

 namespace {

+#if 0
 void CompletionCallback(
     content::WebContentsViewDelegate::DropCompletionCallback callback,
     const enterprise_connectors::ContentAnalysisDelegate::Data& data,
@@ -99,13 +100,15 @@ class HandleDropScanData : public content::WebContentsObserver {
   base::WeakPtrFactory<HandleDropScanData> weakptr_factory_{this};
 };

+#endif
 }  // namespace

 void HandleOnPerformDrop(
     content::WebContents* web_contents,
     const content::DropData& drop_data,
     content::WebContentsViewDelegate::DropCompletionCallback callback) {
-  enterprise_connectors::ContentAnalysisDelegate::Data data;
+  //enterprise_connectors::ContentAnalysisDelegate::Data data;
+#if 0
   Profile* profile =
       Profile::FromBrowserContext(web_contents->GetBrowserContext());
   auto connector =
@@ -114,11 +117,15 @@ void HandleOnPerformDrop(
           : enterprise_connectors::AnalysisConnector::FILE_ATTACHED;
   if (!enterprise_connectors::ContentAnalysisDelegate::IsEnabled(
           profile, web_contents->GetLastCommittedURL(), &data, connector)) {
+#endif
+  if (true) { //!safe_browsing::DeepScanningDialogDelegate::IsEnabled(
+              //profile, web_contents->GetLastCommittedURL(), &data)) {
     std::move(callback).Run(
         content::WebContentsViewDelegate::DropCompletionResult::kContinue);
     return;
   }

+#if 0
   // Collect the data that needs to be scanned.
   if (!drop_data.url_title.empty())
     data.text.push_back(base::UTF16ToUTF8(drop_data.url_title));
@@ -151,4 +158,5 @@ void HandleOnPerformDrop(
     std::move(callback).Run(
         content::WebContentsViewDelegate::DropCompletionResult::kContinue);
   }
+#endif
 }
