diff --git a/ui/views/cocoa/native_widget_mac_ns_window_host.mm b/ui/views/cocoa/native_widget_mac_ns_window_host.mm
index cdaf472a02..70ff707293 100644
--- a/ui/views/cocoa/native_widget_mac_ns_window_host.mm
+++ b/ui/views/cocoa/native_widget_mac_ns_window_host.mm
@@ -522,6 +522,12 @@ void NativeWidgetMacNSWindowHost::SetFullscreen(bool fullscreen,
     GetNSWindowMojo()->ExitFullscreen();
 }

+bool NativeWidgetMacNSWindowHost::IsMaximized() const {
+  bool maximized = false;
+  GetNSWindowMojo()->IsMaximized(&maximized);
+  return maximized && !is_miniaturized_;
+}
+
 void NativeWidgetMacNSWindowHost::SetRootView(views::View* root_view) {
   root_view_ = root_view;
   if (root_view_) {
@@ -658,6 +664,11 @@ gfx::Rect NativeWidgetMacNSWindowHost::GetContentBoundsInScreen() const {
 gfx::Rect NativeWidgetMacNSWindowHost::GetRestoredBounds() const {
   if (target_fullscreen_state_ || in_fullscreen_transition_)
     return window_bounds_before_fullscreen_;
+  if (IsMaximized()) {
+    gfx::Rect ret;
+    if (GetNSWindowMojo()->GetRestoredBounds(&ret))
+      return ret;
+  }
   return window_bounds_in_screen_;
 }

@@ -1281,6 +1292,10 @@ bool NativeWidgetMacNSWindowHost::GetAlwaysRenderWindowAsKey(
 bool NativeWidgetMacNSWindowHost::OnWindowCloseRequested(
     bool* can_window_close) {
   *can_window_close = true;
+  if (root_view_ && !root_view_->GetWidget()->NWCanClose()) {
+    *can_window_close = false;
+    return true;
+  }
   views::NonClientView* non_client_view =
       root_view_ ? root_view_->GetWidget()->non_client_view() : nullptr;
   if (non_client_view)
