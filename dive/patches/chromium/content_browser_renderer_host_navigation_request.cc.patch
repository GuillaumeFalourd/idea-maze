diff --git a/content/browser/renderer_host/navigation_request.cc b/content/browser/renderer_host/navigation_request.cc
index 37434a26db..e5b6989646 100644
--- a/content/browser/renderer_host/navigation_request.cc
+++ b/content/browser/renderer_host/navigation_request.cc
@@ -178,6 +178,11 @@
 #include "ui/android/window_android_compositor.h"
 #endif

+namespace nw {
+  typedef bool(*RphGuestFilterURLHookFn)(content::RenderProcessHost* rph, const GURL* url);
+  extern RphGuestFilterURLHookFn gRphGuestFilterURLHook;
+}
+
 namespace content {

 namespace {
@@ -1712,6 +1717,16 @@ NavigationRequest::NavigationRequest(
           common_params_->url);
       headers.MergeFrom(client_hints_headers);
     }
+    FrameTreeNode* node = frame_tree_node;
+    std::string user_agent_override = GetUserAgentOverride();
+    while (node) {
+      const std::string& nwuseragent = node->frame_owner_properties().nwuseragent;
+      if (!nwuseragent.empty()) {
+        user_agent_override = nwuseragent;
+        break;
+      }
+      node = FrameTreeNode::From(node->parent());
+    }

     // Add reduced accept language header.
     if (auto reduce_accept_lang_utils =
@@ -1736,7 +1751,7 @@ NavigationRequest::NavigationRequest(
         &headers, common_params_->url, common_params_->navigation_type,
         ui::PageTransitionFromInt(common_params_->transition),
         controller->GetBrowserContext(), common_params_->method,
-        GetUserAgentOverride(), common_params_->initiator_origin,
+        user_agent_override, common_params_->initiator_origin,
         common_params_->referrer.get(), frame_tree_node,
         begin_params_->impression.has_value());

@@ -4232,6 +4247,17 @@ void NavigationRequest::OnStartChecksComplete(
   if (navigation_ui_data_)
     navigation_ui_data = navigation_ui_data_->Clone();

+  bool nw_trusted = false;
+  if (starting_site_instance_->IsGuest()) {
+    GURL dummy;
+    RenderFrameHostImpl* navigating_frame_host =
+      associated_rfh_type_ == AssociatedRenderFrameHostType::SPECULATIVE
+          ? frame_tree_node_->render_manager()->speculative_frame_host()
+          : frame_tree_node_->current_frame_host();
+    RenderProcessHost* render_process_host = navigating_frame_host->GetProcess();
+    if (nw::gRphGuestFilterURLHook && nw::gRphGuestFilterURLHook(render_process_host, &dummy))
+      nw_trusted = true;
+  }
   // Give DevTools a chance to override begin params (headers, skip SW)
   // before actually loading resource.
   bool report_raw_headers = false;
@@ -4370,7 +4396,7 @@ void NavigationRequest::OnStartChecksComplete(
                                    : nullptr,
           devtools_navigation_token(), frame_tree_node_->devtools_frame_token(),
           std::move(cors_exempt_headers), std::move(client_security_state),
-          devtools_accepted_stream_types, is_pdf_, initiator_document_),
+          devtools_accepted_stream_types, is_pdf_, initiator_document_, nw_trusted),
       std::move(navigation_ui_data), service_worker_handle_.get(),
       std::move(prefetched_signed_exchange_cache_), this, loader_type,
       CreateCookieAccessObserver(),
