diff --git a/third_party/blink/renderer/core/exported/web_view_impl.cc b/third_party/blink/renderer/core/exported/web_view_impl.cc
index 231f76d07d..0e806ab44e 100644
--- a/third_party/blink/renderer/core/exported/web_view_impl.cc
+++ b/third_party/blink/renderer/core/exported/web_view_impl.cc
@@ -394,6 +394,8 @@ ui::mojom::blink::WindowOpenDisposition NavigationPolicyToDisposition(
     case kNavigationPolicyPictureInPicture:
       DCHECK(RuntimeEnabledFeatures::DocumentPictureInPictureAPIEnabled());
       return ui::mojom::blink::WindowOpenDisposition::NEW_PICTURE_IN_PICTURE;
+    case kNavigationPolicyIgnore:
+      return ui::mojom::blink::WindowOpenDisposition::IGNORE_ACTION;
   }
   NOTREACHED() << "Unexpected NavigationPolicy";
   return ui::mojom::blink::WindowOpenDisposition::IGNORE_ACTION;
@@ -2939,14 +2941,19 @@ void WebViewImpl::Show(const LocalFrameToken& opener_frame_token,
                        NavigationPolicy policy,
                        const gfx::Rect& requested_rect,
                        const gfx::Rect& adjusted_rect,
-                       bool opened_by_user_gesture) {
+                       bool opened_by_user_gesture, WebString* manifest) {
   // This is only called on local main frames.
   DCHECK(local_main_frame_host_remote_);
   DCHECK(web_widget_);
   web_widget_->SetPendingWindowRect(adjusted_rect);
+  WTF::String mnft;
+  if (!manifest || manifest->IsNull())
+    mnft = "";
+  else
+    mnft = *manifest;
   local_main_frame_host_remote_->ShowCreatedWindow(
       opener_frame_token, NavigationPolicyToDisposition(policy), requested_rect,
-      opened_by_user_gesture,
+      opened_by_user_gesture, mnft,
       WTF::Bind(&WebViewImpl::DidShowCreatedWindow, WTF::Unretained(this)));

   MainFrameDevToolsAgentImpl()->DidShowNewWindow();
