diff --git a/content/common/frame.mojom b/content/common/frame.mojom
index 4eee5f6c06..2108c672e4 100644
--- a/content/common/frame.mojom
+++ b/content/common/frame.mojom
@@ -154,6 +154,8 @@ struct CreateViewParams {

   // Base background color of this view. Only used by a local main frame.
   skia.mojom.SkColor? base_background_color;
+
+  bool skip_blocking_parser;
 };

 // A union to distinguish between parameters specific to local main frame
@@ -455,6 +457,8 @@ interface Frame {
       blink.mojom.RemoteFrameInterfacesFromBrowser new_remote_frame_interfaces,
       blink.mojom.RemoteMainFrameInterfaces new_remote_main_frame_interfaces);

+  SetSkipBlockingParser(bool skip);
+
   // Causes all new subresource requests to be blocked (not being started) until
   // ResumeBlockedRequests is called.
   BlockRequests();
@@ -519,6 +523,7 @@ interface FrameBindingsControl {
 };

 struct CreateNewWindowParams {
+  mojo_base.mojom.String16 nw_window_manifest;
   // True if ContentRendererClient allows popups.  This is the case only for
   // extensions.
   bool allow_popup;
@@ -657,6 +662,8 @@ interface NavigationRendererCancellationListener {
 // Implemented by the frame server (i.e. the browser process). For messages that
 // must be associated with the IPC channel.
 interface FrameHost {
+  SetNodeJS(bool node);
+  SetContextCreated(bool created);
   // Sent by the renderer to request the browser to create a new window. |reply|
   // is only non-null on when status == CreateNewWindowStatus::kSuccess.
   [Sync] CreateNewWindow(CreateNewWindowParams params)
