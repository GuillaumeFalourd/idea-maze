diff --git a/src/node_worker.cc b/src/node_worker.cc
index 3fa7fecb..d0f99a5b 100644
--- a/src/node_worker.cc
+++ b/src/node_worker.cc
@@ -170,7 +170,7 @@ class WorkerThreadData {
     isolate->AddNearHeapLimitCallback(Worker::NearHeapLimit, w);
 
     {
-      Locker locker(isolate);
+      //Locker locker(isolate);
       Isolate::Scope isolate_scope(isolate);
       // V8 computes its stack limit the first time a `Locker` is used based on
       // --stack-size. Reset it to the correct value.
@@ -271,13 +271,15 @@ void Worker::Run() {
 
   Debug(this, "Creating isolate for worker with id %llu", thread_id_.id);
 
+  v8::SetTLSPlatform(platform_);
+
   WorkerThreadData data(this);
   if (isolate_ == nullptr) return;
   CHECK(data.loop_is_usable());
 
   Debug(this, "Starting worker with id %llu", thread_id_.id);
   {
-    Locker locker(isolate_);
+    //Locker locker(isolate_);
     Isolate::Scope isolate_scope(isolate_);
     SealHandleScope outer_seal(isolate_);
 
@@ -328,6 +330,10 @@ void Worker::Run() {
       }
 
       if (is_stopped()) return;
+      node::thread_ctx_st* tls_ctx = (node::thread_ctx_st*)malloc(sizeof(node::thread_ctx_st));
+      memset(tls_ctx, 0, sizeof(node::thread_ctx_st));
+      uv_key_set(&node::thread_ctx_key, tls_ctx);
+      node::binding::RegisterBuiltinModules();
       CHECK(!context.IsEmpty());
       Context::Scope context_scope(context);
       {
diff --git a/src/res/node-nw.rc b/src/res/node-nw.rc
new file mode 100644
index 00000000..099772a1
